<?php

function vm_menu() {
    $items['admin/config/content/vm'] = array(
        'title' => 'Versioning Machine settings',
        'description' => 'Set the XPath queries for TEI upload to Versioning Machine',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('vm_admin_form'),
        'access arguments' => array('administer vm'),
        'type' => MENU_NORMAL_ITEM,
    );
    return $items;
}

function vm_permission() {
    return array(
        'upload tei' => array(
          'title' => t('Upload TEI files'),
          'description' => t('Allow users to upload TEI for use in Versioning Machine'),
        ),
        'administer vm' => array(
            'title' => t('Administer Versioning Machine'),
            'description' => t('Allow users to adminster Versioning Machine settings')
        )
    );
}

function vm_admin_form() {
    $form = array();
    $form['vm_xsltproc'] = array(
        '#type' => 'textfield',
        '#title' => t('Location of system xsltproc'),
        '#default_value' => variable_get('vm_xsltproc', '/usr/bin/xsltproc'),
    );
    $form['vm_subdomain'] = array(
        '#type' => 'textfield',
        '#title' => t('Domain name for the versioning machine'),
        '#default_value' => variable_get('vm_subdomain', ''),
    );
    return system_settings_form($form);
}

// Alter form for editing nodes to hide the link, handle the submit
function vm_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'text_node_form') {
    $form['field_vm_link']['#access'] = FALSE;
    $form['actions']['submit']['#submit'] = array('vm_text_form_submit');
  }
}

/***
 * @param $form
 * @param $form_state
 *
 * Parse the TEI to extract field data; update the node with a link to the text in VM
 * Warning: this whole process is insecure. Be careful who has access.
 */
function vm_text_form_submit($form, &$form_state) {
    // Convert the file to HTML via VersioningMachine
    // Really ugly, but PHP doesn't support XSLT 2.0, which is required
    // by VersioningMachine, so this is how we're gonna do it
    $node = node_form_submit_build_node($form, $form_state);
    $node->status = NODE_PUBLISHED;
    $wrapper = entity_metadata_wrapper('node', $node);
    if (user_access('upload tei')) {
        $file = file_load($wrapper->field_tei_file->value()['fid']);
        $filename = drupal_realpath($file->uri);
        $vm_path = DRUPAL_ROOT . '/' . drupal_get_path('module', 'vm') . '/VersioningMachine';
        $cmd = variable_get('vm_xsltproc') . " " . $vm_path . "/src/vmachine.xsl " . $filename;
        $output = array();
        $return = -1;
        exec($cmd, $output, $return);   // run xsltproc
        if ($return == 0) { // Success!
            $basename = basename($filename, '.xml');
            $vm_filename = $vm_path . '/texts/' . $basename . '.html';
            file_unmanaged_save_data($output, $vm_filename);
            $url = variable_get('vm_subdomain');
            if (empty($url)) {
                $url = drupal_get_path('module', 'vm') . '/VersioningMachine/texts/';
            } else {
              $url .= '/';
            }
            $url .= basename($vm_filename);
            $wrapper->field_vm_link->set(array(
                'title' => 'Read',
                'url' => $url
            ));
          } else {
            drupal_set_message(t('Versioning Machine was unable to process this file. Please check it for errors and try again.'), 'error');
        }
    }
    $wrapper->save();
    drupal_goto(drupal_get_path_alias('node/' . $node->nid));
}


