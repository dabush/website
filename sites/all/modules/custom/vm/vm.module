<?php

define("VM_NODE_TYPE", 'text');

function vm_menu() {
    $items['vm/upload-tei'] = array(
        'title' => 'Upload TEI file',
        'description' => 'Upload TEI-encoded texts for use with Versioning Machine',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('vm_form_upload_tei_form'),
        'access arguments' => array('upload tei'),
        'type' => MENU_CALLBACK,
    );
    $items['admin/config/content/vm'] = array(
        'title' => 'Versioning Machine settings',
        'description' => 'Set the XPath queries for TEI upload to Versioning Machine',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('vm_admin_form'),
        'access arguments' => array('administer vm'),
        'type' => MENU_NORMAL_ITEM,
    );
    return $items;

}

function vm_permission() {
    return array(
        'upload tei' => array(
          'title' => t('Upload TEI files'),
          'description' => t('Allow users to upload TEI for use in Versioning Machine'),
        ),
        'administer vm' => array(
            'title' => t('Administer Versioning Machine'),
            'description' => t('Allow users to adminster Versioning Machine settings')
        )
    );
}

/***
 * Returns an array of fields for the vm text node
 */
function vm_get_node_fields() {
    return field_info_instances('node', VM_NODE_TYPE);
}

function vm_admin_form() {
    $form = array();
    $variables = array('title');

    $form['vm_xsltproc'] = array(
        '#type' => 'textfield',
        '#title' => t('Location of system xsltproc'),
        '#default_value' => variable_get('vm_xsltproc', '/usr/bin/xsltproc'),
    );
//    $form['title'] = array(
//        '#type' => 'textfield',
//        '#title' => t('XPath query for Title'),
//        '#default_value' => variable_get('vm_xpath_title', '//teiHeader/fileDesc/titleStmt/title'),
//        '#size' => 50,
//    );
//    foreach (vm_get_node_fields() as $name => $attributes) {
//        $form[$name] = array(
//            '#type' => 'textfield',
//            '#title' => t('XPath query for ' . $attributes['label']),
//            '#default_value' => variable_get('vm_xpath_' . $name, ''),
//            '#size' => 50,
//        );
//        array_push($variables, $name);
//    }
//    variable_set('vm_xpath_items', $variables);
    return system_settings_form($form);
}

function vm_form_upload_tei_form($form, &$form_state) {
    $form['tei_file'] = array(
        '#type' => 'managed_file',
        '#title' => t('Upload TEI file'),
        '#description' => t("Upload a TEI-encoded XML file for use in Versioning Machine"),
        '#upload_validators' => array(
            'file_validate_extensions' => array('xml'),
            'file_validate_size' => array(10 * 1024 * 1024),
        ),
        '#upload_location' => "public://vm_tei",
        '#required' => TRUE,
    );

    $form['submit'] = array(
        '#type' => 'submit',
        '#value' => 'Submit'
    );

    return $form;
}

/***
 * @param $form
 * @param $form_state
 *
 * Parse the TEI to extract field data; create a node with this data
 * Warning: this whole process is insecure. Be careful who has access.
 */
function vm_form_upload_tei_form_submit($form, &$form_state) {
    global $user;
    // Convert the file to HTML via VersioningMachine
    // Really ugly, but PHP doesn't support XSLT 2.0, which is required
    // by VersioningMachine, so this is how we're gonna do it
    $file = file_load($form_state['values']['tei_file']);
    $filename = drupal_realpath($file->uri);
    $vm_path = DRUPAL_ROOT . '/' . drupal_get_path('module', 'vm') . '/VersioningMachine';
    $cmd = variable_get('vm_xsltproc') . " " . $vm_path . "/src/vmachine.xsl " . $filename;
    $output = array();
    $return = -1;
    exec($cmd, $output, $return);
    if ($return == 0) { // Success!
        $basename = basename($filename, '.xml');
        $vm_filename = $vm_path . '/texts/' . $basename . '.html';
        file_unmanaged_save_data($output, $vm_filename);

        $file->status = FILE_STATUS_PERMANENT;
        file_save($file);
        $node = entity_create('node', array(
            'type' => VM_NODE_TYPE,
            'uid' => $user->uid,
            'status' => 1,
            'comment' => 0,
            'promote' => 0
        ));
        $wrapper = entity_metadata_wrapper('node', $node);
        $wrapper->field_tei_file->file->set($file); // Save the filename
        $wrapper->field_vm_link->set(array(
            'title' => 'Read in Versioning Machine',
            'url' => $vm_filename)
        );
        $wrapper->save();
        drupal_goto('/node/' . $node->nid . '/edit');
    } else {
        drupal_set_message(t('Versioning Machine was unable to process this file. Please check it for errors and try again'), 'error');
    }
}


function vm_form_text_alter($form, $form_state, $form_id) {
    $form['field_tei_file']['#access'] = FALSE;
    $form['field_vm_link']['#access'] = FALSE;
}


